name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: crypto_arbitrage_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup test environment
      run: |
        cp .env.example .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/crypto_arbitrage_test" >> .env
        echo "NODE_ENV=test" >> .env
        echo "SESSION_SECRET=test_secret_key" >> .env
    
    - name: Run database migrations
      run: npm run db:push
    
    - name: Run TypeScript type check
      run: npx tsc --noEmit
    
    - name: Build application
      run: npm run build
    
    - name: Run tests (if available)
      run: npm test --if-present
    
    - name: Lint code
      run: npm run lint --if-present

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-build
        path: |
          dist/
          package.json
          package-lock.json